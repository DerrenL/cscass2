{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar rqs = require(\"./request\");\n/**\n * Set/update (some) property values of a given entity.\n */\n\n\nvar SetValues = /*#__PURE__*/function (_rqs$Request) {\n  _inherits(SetValues, _rqs$Request);\n\n  var _super = _createSuper(SetValues);\n\n  /**\n   * Construct the request\n   * @param {Object} values - The values for the individual properties.\n   *   {\n   *     product_description: '4K TV with 3D feature',\n   *     categories:   ['Electronics', 'Televisions'],\n   *     price_usd: 342,\n   *     in_stock_from: '2016-11-16T08:00Z'\n   *   }\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the item should be created if not present in the database.\n   */\n  function SetValues(path, values, optional) {\n    var _this;\n\n    _classCallCheck(this, SetValues);\n\n    _this = _super.call(this, 'POST', path, 1000, false);\n    _this.values = values;\n    optional = optional || {};\n    _this.cascadeCreate = optional.cascadeCreate;\n    return _this;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  _createClass(SetValues, [{\n    key: \"bodyParameters\",\n    value: function bodyParameters() {\n      var result = this.values;\n      if (this.cascadeCreate) result['!cascadeCreate'] = true;\n      return result;\n    }\n    /**\n     * Get query parameters\n     * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n     */\n\n  }, {\n    key: \"queryParameters\",\n    value: function queryParameters() {\n      return {};\n    }\n  }]);\n\n  return SetValues;\n}(rqs.Request);\n\nexports.SetValues = SetValues;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/requests/set-values.js"],"names":["rqs","require","SetValues","path","values","optional","cascadeCreate","result","Request","exports"],"mappings":"AAAA;;;;;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;IAGMC,S;;;;;AAEJ;;;;;;;;;;;;;;;AAeA,qBAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AAAA;;AAAA;;AAClC,8BAAM,MAAN,EAAcF,IAAd,EAAoB,IAApB,EAA0B,KAA1B;AACA,UAAKC,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,UAAKC,aAAL,GAAqBD,QAAQ,CAACC,aAA9B;AAJkC;AAKnC;AAED;;;;;;;;qCAIiB;AACf,UAAIC,MAAM,GAAG,KAAKH,MAAlB;AACA,UAAG,KAAKE,aAAR,EACEC,MAAM,CAAC,gBAAD,CAAN,GAA2B,IAA3B;AACF,aAAOA,MAAP;AACD;AAED;;;;;;;sCAIkB;AAChB,aAAO,EAAP;AACD;;;;EAzCqBP,GAAG,CAACQ,O;;AA4C5BC,OAAO,CAACP,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Set/update (some) property values of a given entity.\n */\nclass SetValues extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {Object} values - The values for the individual properties.\n   *   {\n   *     product_description: '4K TV with 3D feature',\n   *     categories:   ['Electronics', 'Televisions'],\n   *     price_usd: 342,\n   *     in_stock_from: '2016-11-16T08:00Z'\n   *   }\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the item should be created if not present in the database.\n   */\n  constructor(path, values, optional) {\n    super('POST', path, 1000, false);\n    this.values = values;\n    optional = optional || {};\n    this.cascadeCreate = optional.cascadeCreate;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let result = this.values;\n    if(this.cascadeCreate)\n      result['!cascadeCreate'] = true;\n    return result;\n  }\n\n  /**\n   * Get query parameters\n   * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n   */\n  queryParameters() {\n    return {};\n  }\n}\n\nexports.SetValues = SetValues\n"]},"metadata":{},"sourceType":"script"}