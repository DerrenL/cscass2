{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar ae = require(\"./api-error\");\n/**\n * Error thrown when a request did not succeed (did not return 200 or 201)\n */\n\n\nvar ResponseError = /*#__PURE__*/function (_ae$ApiError) {\n  _inherits(ResponseError, _ae$ApiError);\n\n  var _super = _createSuper(ResponseError);\n\n  /**\n   * Create the exception\n   * @param {Request} request - ID of the item which will be modified\n   * @param {number} statusCode - The values for the individual properties\n   * @param {string} message - Error message from the API\n   */\n  function ResponseError(request, statusCode, message) {\n    var _this;\n\n    _classCallCheck(this, ResponseError);\n\n    _this = _super.call(this, message);\n    _this.request = request;\n    _this.statusCode = statusCode;\n    return _this;\n  }\n\n  return ResponseError;\n}(ae.ApiError);\n\nexports.ResponseError = ResponseError;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/errors/response-error.js"],"names":["ae","require","ResponseError","request","statusCode","message","ApiError","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;AAEA;;;;;IAGMC,a;;;;;AACJ;;;;;;AAMA,yBAAYC,OAAZ,EAAqBC,UAArB,EAAiCC,OAAjC,EAA0C;AAAA;;AAAA;;AACxC,8BAAMA,OAAN;AACA,UAAKF,OAAL,GAAeA,OAAf;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AAHwC;AAIzC;;;EAXyBJ,EAAE,CAACM,Q;;AAc/BC,OAAO,CAACL,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\nconst ae = require(\"./api-error\");\n\n/**\n * Error thrown when a request did not succeed (did not return 200 or 201)\n */\nclass ResponseError extends ae.ApiError {\n  /**\n   * Create the exception\n   * @param {Request} request - ID of the item which will be modified\n   * @param {number} statusCode - The values for the individual properties\n   * @param {string} message - Error message from the API\n   */\n  constructor(request, statusCode, message) {\n    super(message);\n    this.request = request;\n    this.statusCode = statusCode;\n  }\n}\n\nexports.ResponseError = ResponseError\n"]},"metadata":{},"sourceType":"script"}