{"ast":null,"code":"'use strict'; //http://stackoverflow.com/questions/31089801/extending-error-in-javascript-with-es6-syntax\n\n/**\n * Base class for errors that occur because of errors in requests reported by API or because of a timeout\n */\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar ApiError = /*#__PURE__*/function (_Error) {\n  _inherits(ApiError, _Error);\n\n  var _super = _createSuper(ApiError);\n\n  function ApiError(message) {\n    var _this;\n\n    _classCallCheck(this, ApiError);\n\n    _this = _super.call(this, message);\n    _this.name = _this.constructor.name;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n\n    return _this;\n  }\n\n  return ApiError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ApiError = ApiError;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/errors/api-error.js"],"names":["ApiError","message","name","constructor","Error","captureStackTrace","stack","exports"],"mappings":"AAAA,a,CAEA;;AAEA;;;;;;;;;;;;;;IAGMA,Q;;;;;AACJ,oBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;;AACA,QAAI,OAAOE,KAAK,CAACC,iBAAb,KAAmC,UAAvC,EAAmD;AACjDD,MAAAA,KAAK,CAACC,iBAAN,gCAA8B,MAAKF,WAAnC;AACD,KAFD,MAEO;AACL,YAAKG,KAAL,GAAc,IAAIF,KAAJ,CAAUH,OAAV,CAAD,CAAqBK,KAAlC;AACD;;AAPkB;AAQpB;;;iCAToBF,K;;AAYvBG,OAAO,CAACP,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\n//http://stackoverflow.com/questions/31089801/extending-error-in-javascript-with-es6-syntax\n\n/**\n * Base class for errors that occur because of errors in requests reported by API or because of a timeout\n */\nclass ApiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else { \n      this.stack = (new Error(message)).stack; \n    }\n  }\n}\n\nexports.ApiError = ApiError\n"]},"metadata":{},"sourceType":"script"}