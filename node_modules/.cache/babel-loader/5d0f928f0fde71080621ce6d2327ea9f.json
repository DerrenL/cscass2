{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar DeepAI = require('./core/DeepAI');\n\nvar defaults = require('./defaults');\n\nvar bind = require('./helpers/bind');\n/**\r\n * Create an instance of DeepAI\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {DeepAI} A new instance of DeepAI\r\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new DeepAI(defaultConfig);\n  var instance = bind(DeepAI.prototype.request, context); // Copy deepai.prototype to instance\n\n  utils.extend(instance, DeepAI.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context);\n  return instance;\n} // Create the default instance to be exported\n\n\nvar deepai = createInstance(defaults); // Expose DeepAI class to allow class inheritance\n\ndeepai.DeepAI = DeepAI; // Factory for creating new instances\n\ndeepai.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(deepai.defaults, instanceConfig));\n};\n\nmodule.exports = deepai; // Allow use of default import syntax in TypeScript\n\nmodule.exports[\"default\"] = deepai;","map":{"version":3,"sources":["C:/Users/Eefrey/Desktop/cscass2/node_modules/deepai/lib/deepai.js"],"names":["utils","require","DeepAI","defaults","bind","createInstance","defaultConfig","context","instance","prototype","request","extend","deepai","create","instanceConfig","mergeConfig","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAAlB;AAGA;;;;;;;;AAMA,SAASI,cAAT,CAAwBC,aAAxB,EAAuC;AACnC,MAAIC,OAAO,GAAG,IAAIL,MAAJ,CAAWI,aAAX,CAAd;AACA,MAAIE,QAAQ,GAAGJ,IAAI,CAACF,MAAM,CAACO,SAAP,CAAiBC,OAAlB,EAA2BH,OAA3B,CAAnB,CAFmC,CAInC;;AACAP,EAAAA,KAAK,CAACW,MAAN,CAAaH,QAAb,EAAuBN,MAAM,CAACO,SAA9B,EAAyCF,OAAzC,EALmC,CAOnC;;AACAP,EAAAA,KAAK,CAACW,MAAN,CAAaH,QAAb,EAAuBD,OAAvB;AAEA,SAAOC,QAAP;AACH,C,CAED;;;AACA,IAAII,MAAM,GAAGP,cAAc,CAACF,QAAD,CAA3B,C,CAEA;;AACAS,MAAM,CAACV,MAAP,GAAgBA,MAAhB,C,CAEA;;AACAU,MAAM,CAACC,MAAP,GAAgB,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAC5C,SAAOT,cAAc,CAACU,WAAW,CAACH,MAAM,CAACT,QAAR,EAAkBW,cAAlB,CAAZ,CAArB;AACH,CAFD;;AAIAE,MAAM,CAACC,OAAP,GAAiBL,MAAjB,C,CAEA;;AACAI,MAAM,CAACC,OAAP,cAAyBL,MAAzB","sourcesContent":["'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar DeepAI = require('./core/DeepAI');\r\nvar defaults = require('./defaults');\r\nvar bind = require('./helpers/bind');\r\n\r\n\r\n/**\r\n * Create an instance of DeepAI\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {DeepAI} A new instance of DeepAI\r\n */\r\nfunction createInstance(defaultConfig) {\r\n    var context = new DeepAI(defaultConfig);\r\n    var instance = bind(DeepAI.prototype.request, context);\r\n\r\n    // Copy deepai.prototype to instance\r\n    utils.extend(instance, DeepAI.prototype, context);\r\n\r\n    // Copy context to instance\r\n    utils.extend(instance, context);\r\n\r\n    return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar deepai = createInstance(defaults);\r\n\r\n// Expose DeepAI class to allow class inheritance\r\ndeepai.DeepAI = DeepAI;\r\n\r\n// Factory for creating new instances\r\ndeepai.create = function create(instanceConfig) {\r\n    return createInstance(mergeConfig(deepai.defaults, instanceConfig));\r\n};\r\n\r\nmodule.exports = deepai;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = deepai;\r\n"]},"metadata":{},"sourceType":"script"}