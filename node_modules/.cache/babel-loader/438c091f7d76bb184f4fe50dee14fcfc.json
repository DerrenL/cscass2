{"ast":null,"code":"/*\n This file is auto-generated, do not edit\n*/\n'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar rqs = require(\"./request\");\n/**\n * Adds a purchase of a given item made by a given user.\n */\n\n\nvar AddPurchase = /*#__PURE__*/function (_rqs$Request) {\n  _inherits(AddPurchase, _rqs$Request);\n\n  var _super = _createSuper(AddPurchase);\n\n  /**\n   * Construct the request\n   * @param {string} userId - User who purchased the item\n   * @param {string} itemId - Purchased item\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the purchase as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) of purchased items. The default is 1. For example if `user-x` purchases two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price paid by the user for the item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *profit*\n   *         - Type: number\n   *         - Description: Your profit from the purchased item. The profit is natural in e-commerce domain (for example if `user-x` purchases `item-y` for $100 and the gross margin is 30 %, then the profit is $30), but is applicable also in other domains (for example at a news company it may be income from displayed advertisement on article page). If `amount` is greater than 1, sum of profit of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this purchase is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  function AddPurchase(userId, itemId, optional) {\n    var _this;\n\n    _classCallCheck(this, AddPurchase);\n\n    _this = _super.call(this, 'POST', '/purchases/', 1000, false);\n    _this.userId = userId;\n    _this.itemId = itemId;\n    optional = optional || {};\n    _this.timestamp = optional.timestamp;\n    _this.cascadeCreate = optional.cascadeCreate;\n    _this.amount = optional.amount;\n    _this.price = optional.price;\n    _this.profit = optional.profit;\n    _this.recommId = optional.recommId;\n    _this.additionalData = optional.additionalData;\n    return _this;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  _createClass(AddPurchase, [{\n    key: \"bodyParameters\",\n    value: function bodyParameters() {\n      var params = {};\n      params.userId = this.userId;\n      params.itemId = this.itemId;\n      if (this.timestamp !== undefined) params.timestamp = this.timestamp;\n      if (this.cascadeCreate !== undefined) params.cascadeCreate = this.cascadeCreate;\n      if (this.amount !== undefined) params.amount = this.amount;\n      if (this.price !== undefined) params.price = this.price;\n      if (this.profit !== undefined) params.profit = this.profit;\n      if (this.recommId !== undefined) params.recommId = this.recommId;\n      if (this.additionalData !== undefined) params.additionalData = this.additionalData;\n      return params;\n    }\n    /**\n     * Get query parameters\n     * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n     */\n\n  }, {\n    key: \"queryParameters\",\n    value: function queryParameters() {\n      var params = {};\n      return params;\n    }\n  }]);\n\n  return AddPurchase;\n}(rqs.Request);\n\nexports.AddPurchase = AddPurchase;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/requests/add-purchase.js"],"names":["rqs","require","AddPurchase","userId","itemId","optional","timestamp","cascadeCreate","amount","price","profit","recommId","additionalData","params","undefined","Request","exports"],"mappings":"AAAA;;;AAIA;;;;;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;IAGMC,W;;;;;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,uBAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AAAA;;AAAA;;AACpC,8BAAM,MAAN,EAAc,aAAd,EAA6B,IAA7B,EAAmC,KAAnC;AACA,UAAKF,MAAL,GAAcA,MAAd;AACA,UAAKC,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,UAAKC,SAAL,GAAiBD,QAAQ,CAACC,SAA1B;AACA,UAAKC,aAAL,GAAqBF,QAAQ,CAACE,aAA9B;AACA,UAAKC,MAAL,GAAcH,QAAQ,CAACG,MAAvB;AACA,UAAKC,KAAL,GAAaJ,QAAQ,CAACI,KAAtB;AACA,UAAKC,MAAL,GAAcL,QAAQ,CAACK,MAAvB;AACA,UAAKC,QAAL,GAAgBN,QAAQ,CAACM,QAAzB;AACA,UAAKC,cAAL,GAAsBP,QAAQ,CAACO,cAA/B;AAXoC;AAYrC;AAED;;;;;;;;qCAIiB;AACf,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACV,MAAP,GAAgB,KAAKA,MAArB;AACAU,MAAAA,MAAM,CAACT,MAAP,GAAgB,KAAKA,MAArB;AAEA,UAAG,KAAKE,SAAL,KAAmBQ,SAAtB,EACED,MAAM,CAACP,SAAP,GAAmB,KAAKA,SAAxB;AAEF,UAAG,KAAKC,aAAL,KAAuBO,SAA1B,EACED,MAAM,CAACN,aAAP,GAAuB,KAAKA,aAA5B;AAEF,UAAG,KAAKC,MAAL,KAAgBM,SAAnB,EACED,MAAM,CAACL,MAAP,GAAgB,KAAKA,MAArB;AAEF,UAAG,KAAKC,KAAL,KAAeK,SAAlB,EACED,MAAM,CAACJ,KAAP,GAAe,KAAKA,KAApB;AAEF,UAAG,KAAKC,MAAL,KAAgBI,SAAnB,EACED,MAAM,CAACH,MAAP,GAAgB,KAAKA,MAArB;AAEF,UAAG,KAAKC,QAAL,KAAkBG,SAArB,EACED,MAAM,CAACF,QAAP,GAAkB,KAAKA,QAAvB;AAEF,UAAG,KAAKC,cAAL,KAAwBE,SAA3B,EACED,MAAM,CAACD,cAAP,GAAwB,KAAKA,cAA7B;AAEF,aAAOC,MAAP;AACD;AAED;;;;;;;sCAIkB;AAChB,UAAIA,MAAM,GAAG,EAAb;AACA,aAAOA,MAAP;AACD;;;;EApFuBb,GAAG,CAACe,O;;AAuF9BC,OAAO,CAACd,WAAR,GAAsBA,WAAtB","sourcesContent":["/*\n This file is auto-generated, do not edit\n*/\n\n'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Adds a purchase of a given item made by a given user.\n */\nclass AddPurchase extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {string} userId - User who purchased the item\n   * @param {string} itemId - Purchased item\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the purchase as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) of purchased items. The default is 1. For example if `user-x` purchases two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price paid by the user for the item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *profit*\n   *         - Type: number\n   *         - Description: Your profit from the purchased item. The profit is natural in e-commerce domain (for example if `user-x` purchases `item-y` for $100 and the gross margin is 30 %, then the profit is $30), but is applicable also in other domains (for example at a news company it may be income from displayed advertisement on article page). If `amount` is greater than 1, sum of profit of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this purchase is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  constructor(userId, itemId, optional) {\n    super('POST', '/purchases/', 1000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.timestamp = optional.timestamp;\n    this.cascadeCreate = optional.cascadeCreate;\n    this.amount = optional.amount;\n    this.price = optional.price;\n    this.profit = optional.profit;\n    this.recommId = optional.recommId;\n    this.additionalData = optional.additionalData;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n\n    if(this.timestamp !== undefined)\n      params.timestamp = this.timestamp;\n\n    if(this.cascadeCreate !== undefined)\n      params.cascadeCreate = this.cascadeCreate;\n\n    if(this.amount !== undefined)\n      params.amount = this.amount;\n\n    if(this.price !== undefined)\n      params.price = this.price;\n\n    if(this.profit !== undefined)\n      params.profit = this.profit;\n\n    if(this.recommId !== undefined)\n      params.recommId = this.recommId;\n\n    if(this.additionalData !== undefined)\n      params.additionalData = this.additionalData;\n\n    return params;\n  }\n\n  /**\n   * Get query parameters\n   * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n   */\n  queryParameters() {\n    let params = {};\n    return params;\n  }\n}\n\nexports.AddPurchase = AddPurchase\n"]},"metadata":{},"sourceType":"script"}