{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Derren\\\\Desktop\\\\CSC\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Derren\\\\Desktop\\\\CSC\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\Derren\\\\Desktop\\\\CSC\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar apiBaseUrl = require('./apiBaseUrl').baseUrl;\n\nvar WAD_COLORS = [\"rgb(173, 35, 35)\", // Red\n\"rgb(42, 75, 215)\", // Blue\n\"rgb(87, 87, 87)\", // Dark Gray\n\"rgb(29, 105, 20)\", // Green\n\"rgb(129, 74, 25)\", // Brown\n\"rgb(129, 38, 192)\", // Purple\n\"rgb(160, 160, 160)\", // Lt Gray\n\"rgb(129, 197, 122)\", // Lt green\n\"rgb(157, 175, 255)\", // Lt blue\n\"rgb(41, 208, 208)\", // Cyan\n\"rgb(255, 146, 51)\", // Orange\n\"rgb(199, 183, 0)\", // Yellow\n\"rgb(233, 222, 187)\", // Tan\n\"rgb(255, 205, 243)\" // Pink\n// \"rgb(255, 255, 255)\", // White\n//\"rgb(0, 0, 0)\",       // Black\n];\nvar isAbsolute = new RegExp('^([a-z]+://|//)', 'i');\nvar isDataOrBlob = new RegExp('^(data|blob):', 'i');\n\nfunction prependApiBaseIfNeeded(url) {\n  if (isAbsolute.test(url) || isDataOrBlob.test(url)) {\n    return url; // already absolute\n  } else {\n    return apiBaseUrl + url; // turn relative into absolute\n  }\n}\n\nfunction polygonToSvgPath(polygon, left, top) {\n  // M 10,10 L 100,10 100,100 z    M 30,20 L 70,20 70,60 z\n  var path_strings = [];\n\n  var _iterator = _createForOfIteratorHelper(polygon),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var part = _step.value;\n\n      if (part.length < 2) {\n        continue;\n      }\n\n      path_strings.push('M');\n      var first = true;\n\n      var _iterator2 = _createForOfIteratorHelper(part),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var point = _step2.value;\n          path_strings.push(point[0] - left + \",\" + (point[1] - top));\n\n          if (isNaN(point[0]) || isNaN(point[1])) {\n            console.log('not showing invalid polygon, found NaN');\n            return \"\";\n          }\n\n          if (first) {\n            path_strings.push('L');\n            first = false;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      path_strings.push('z');\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return path_strings.join(\" \");\n}\n/*\n\nData structures basic info...\n\nresult\n{\n    output_url:\n    output:\n    id:\n    err:\n}\n\n\nresultPageData\n{\n    result_data: {\n        inputs:[\n            {\n                is_img: true,\n                url: (relative or absolute)\n            }\n        ],\n        visualizer_data: {\n            list_key: 'Objects'\n            label_key: 'Object'\n        },\n        scale_applied: 1.333\n    }\n}\n\n\nannotatedResult - this is basically the merging of the 2 above\n{   err:\n    output_url:\n    output:\n    id:\n    inputs:[\n        {\n            is_img: true,\n            url: (relative or absolute)\n        }\n    ],\n    visualizer_data: {\n        list_key: 'Objects'\n        label_key: 'Object'\n    },\n    scale_applied: 1.333\n}\n\n\n*/\n// Take a result object from API call, and fetch additional data, and return the additional data merged in.\n\n\nfunction getAnnotatedResultFromResult(_x) {\n  return _getAnnotatedResultFromResult.apply(this, arguments);\n}\n\nfunction _getAnnotatedResultFromResult() {\n  _getAnnotatedResultFromResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result) {\n    var resultPageData, result_data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!result.err) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log('cannot get result page data for error result');\n            return _context.abrupt(\"return\", result);\n\n          case 3:\n            _context.next = 5;\n            return fetch(apiBaseUrl + '/get_standard_api_result_data/' + result.id, {\n              credentials: 'include'\n            });\n\n          case 5:\n            resultPageData = _context.sent;\n            _context.next = 8;\n            return resultPageData.json();\n\n          case 8:\n            resultPageData = _context.sent;\n            result_data = resultPageData.result_data; // make merging of all the properties manually...\n\n            return _context.abrupt(\"return\", {\n              err: result.err,\n              output: result.output,\n              output_url: result.output_url,\n              id: result.id,\n              inputs: result_data.inputs,\n              visualizer_data: result_data.visualizer_data,\n              scale_applied: result_data.scale_applied\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAnnotatedResultFromResult.apply(this, arguments);\n}\n\nfunction renderResultIntoElement(_x2, _x3) {\n  return _renderResultIntoElement.apply(this, arguments);\n}\n\nfunction _renderResultIntoElement() {\n  _renderResultIntoElement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(result, element) {\n    var annotatedResult;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('getting result page data');\n            _context2.next = 3;\n            return getAnnotatedResultFromResult(result);\n\n          case 3:\n            annotatedResult = _context2.sent;\n            console.log('got result page data');\n            return _context2.abrupt(\"return\", renderAnnotatedResultIntoElement(annotatedResult, element));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _renderResultIntoElement.apply(this, arguments);\n}\n\nfunction renderAnnotatedResultIntoElement(annotatedResult, element) {\n  element.innerHTML = ''; // remove everything to start\n\n  if (annotatedResult.err) {\n    element.innerHTML = err;\n    return false;\n  }\n\n  if (annotatedResult.output) {\n    // JSON or text output.\n    console.log('got json or text output');\n\n    if (typeof annotatedResult.output === 'string') {\n      var scroller = document.createElement(\"div\");\n      scroller.style.width = '100%';\n      scroller.style.height = '100%';\n      scroller.style.overflow = 'auto';\n      scroller.style.display = 'flex';\n      scroller.style.alignItems = 'center';\n      scroller.style.flexDirection = 'column';\n      element.appendChild(scroller);\n      var pre = document.createElement(\"pre\");\n      pre.textContent = annotatedResult.output;\n      pre.style.whiteSpace = \"pre-wrap\";\n      pre.style.margin = '0px';\n      scroller.appendChild(pre); // Append inputs\n\n      var _iterator3 = _createForOfIteratorHelper(annotatedResult.inputs),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var input = _step3.value;\n\n          if (input.is_img) {\n            var img_tag = document.createElement('img');\n            img_tag.src = prependApiBaseIfNeeded(input.url);\n            img_tag.style.position = 'relative';\n            img_tag.style.width = '100%';\n            img_tag.style.height = '100%%';\n            img_tag.style.objectFit = 'contain';\n            scroller.appendChild(img_tag);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return true;\n    } else if (typeof annotatedResult.output === 'object') {\n      // If we uploaded an image, then we may be able to render the image with boxes on top\n      if (annotatedResult.inputs.length == 1 && annotatedResult.inputs[0].is_img && annotatedResult.visualizer_data) {\n        // single image input and we know how to visualize it.\n        console.log('have visualizer for result JSON');\n        var resultscaler = document.createElement('iframe'); // Set up a handler for when the frame loads - we need to handle this event\n\n        resultscaler.onload = function () {\n          // Firefox doesnt allow inner iframe manip until the iframe is loaded...\n          var innerDoc = resultscaler.contentDocument.body;\n          innerDoc.style.margin = '0px';\n          innerDoc.style.overflow = 'hidden';\n          /*\n          \n                              var css = `\n                                  boundingbox:hover{\n                                      background-color: #00ff00\n                                  }\n                              `;\n                              var style = document.createElement('style');\n          \n                              if (style.styleSheet) {\n                                  style.styleSheet.cssText = css;\n                              } else {\n                                  style.appendChild(document.createTextNode(css));\n                              }\n          \n                              resultscaler.contentDocument.head.appendChild(style);\n          */\n\n          var bbox_container = document.createElement('boundingboxcontainer');\n          bbox_container.style.position = 'relative'; // the absolute positions are relative to this element\n\n          bbox_container.style.opacity = '0.001'; // the result are hidden until the iframe reflows - which is first when the img loads\n\n          innerDoc.appendChild(bbox_container);\n          var img_tag = document.createElement('img');\n          img_tag.src = prependApiBaseIfNeeded(annotatedResult.inputs[0].url);\n          img_tag.style.position = 'absolute';\n          bbox_container.appendChild(img_tag);\n\n          var iframe_reflow = function iframe_reflow() {\n            console.log('iframe resize');\n            resultscaler.contentDocument.body.style.transform = null;\n            var bodyWidth = resultscaler.contentDocument.body.scrollWidth;\n            var bodyHeight = resultscaler.contentDocument.body.scrollHeight;\n            var imgWidth = img_tag.offsetWidth;\n            var imgHeight = img_tag.offsetHeight;\n            var containerWidth = resultscaler.offsetWidth;\n            var containerHeight = resultscaler.offsetHeight;\n            var wExcess = 0;\n            var hExcess = 0;\n\n            if (imgWidth < bodyWidth && imgHeight < bodyHeight) {\n              var wScale = containerWidth / imgWidth;\n              var hScale = containerHeight / imgHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - imgWidth * minScale;\n              hExcess = containerHeight - imgHeight * minScale;\n            } else {\n              var wScale = containerWidth / bodyWidth;\n              var hScale = containerHeight / bodyHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - bodyWidth * minScale;\n              hExcess = containerHeight - bodyHeight * minScale;\n            }\n\n            wExcess = wExcess / minScale;\n            hExcess = hExcess / minScale;\n            resultscaler.contentDocument.body.style.transformOrigin = 'top left';\n            resultscaler.contentDocument.body.style.transform = 'scale(' + minScale + ')';\n            bbox_container.style.setProperty('--scaleapplied', minScale);\n            bbox_container.style.setProperty('--fontscale', 100 / minScale + \"%\");\n            bbox_container.style.left = wExcess / 2 + \"px\";\n            bbox_container.style.top = hExcess / 2 + \"px\";\n            bbox_container.style.opacity = '1';\n          };\n\n          resultscaler.contentWindow.onresize = iframe_reflow;\n          img_tag.onload = iframe_reflow;\n          var processed_annotations = process_annotations(annotatedResult.output, annotatedResult.visualizer_data, annotatedResult.scale_applied);\n          console.log('processed annotations', processed_annotations);\n          var i = 0;\n\n          var _iterator4 = _createForOfIteratorHelper(processed_annotations),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var annotation = _step4.value;\n              var bbox = document.createElement('boundingbox');\n              bbox.style.position = 'absolute';\n              var left;\n              var top;\n              var width;\n              var height;\n              var color = WAD_COLORS[i++ % WAD_COLORS.length];\n\n              if (annotation.mask_vertices) {\n                var minx = null;\n                var miny = null;\n                var maxx = null;\n                var maxy = null;\n\n                var _iterator5 = _createForOfIteratorHelper(annotation.mask_vertices),\n                    _step5;\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var part = _step5.value;\n\n                    var _iterator6 = _createForOfIteratorHelper(part),\n                        _step6;\n\n                    try {\n                      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                        var point = _step6.value;\n                        var x = point[0];\n                        var y = point[1];\n\n                        if (minx === null || x < minx) {\n                          minx = x;\n                        }\n\n                        if (miny === null || y < miny) {\n                          miny = y;\n                        }\n\n                        if (maxx === null || x > maxx) {\n                          maxx = x;\n                        }\n\n                        if (maxy === null || y > maxy) {\n                          maxy = y;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator6.e(err);\n                    } finally {\n                      _iterator6.f();\n                    }\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n\n                width = maxx - minx;\n                height = maxy - miny;\n                left = minx;\n                top = miny;\n                var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                svg.style.position = 'absolute';\n                svg.style.overflow = 'visible';\n                svg.style.width = width + 'px';\n                svg.style.height = height + 'px';\n                var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\n                path.setAttributeNS(null, \"d\", polygonToSvgPath(annotation.mask_vertices, left, top));\n                path.style.fill = 'none';\n                path.style.stroke = color;\n                path.style.strokeWidth = 'calc(2px / var(--scaleapplied))'; // 2px at all scale levels\n\n                svg.appendChild(path);\n                bbox.appendChild(svg);\n                bbox.style.border = 'none';\n              } else if (annotation.bounding_box) {\n                left = annotation.bounding_box[0];\n                top = annotation.bounding_box[1];\n                width = annotation.bounding_box[2];\n                height = annotation.bounding_box[3];\n                bbox.style.border = 'calc(2px / var(--scaleapplied)) solid ' + color;\n              } else {\n                throw new Exception('Neither mask_vertices or bounding_box is passed, unknown annotation format');\n              }\n\n              bbox.style.left = left + 'px';\n              bbox.style.top = top + 'px';\n              bbox.style.width = width + 'px';\n              bbox.style.height = height + 'px';\n              bbox_container.appendChild(bbox);\n              var bbox_label = document.createElement('boundingboxlabel');\n              bbox_label.textContent = annotation.caption;\n              bbox_label.style.color = 'white';\n              bbox_label.style.fontFamily = 'arial';\n              bbox_label.style.backgroundColor = color;\n              bbox_label.style.fontSize = 'var(--fontscale)';\n              bbox_label.style.position = 'absolute';\n              bbox.appendChild(bbox_label);\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }; // Set the src which will end up triggering the onload event in all browsers.\n\n\n        resultscaler.src = 'about:blank';\n        resultscaler.style.border = 'none';\n        resultscaler.style.width = '100%';\n        resultscaler.style.height = '100%';\n        element.appendChild(resultscaler);\n        return true;\n      } else {\n        // not single image - perhaps multi image or text input.\n        // or no visualizer\n        console.log('no visualizer for result JSON');\n        var scroller = document.createElement(\"div\");\n        scroller.style.width = '100%';\n        scroller.style.height = '100%';\n        scroller.style.overflow = 'auto';\n        scroller.style.display = 'flex';\n        scroller.style.alignItems = 'center';\n        scroller.style.flexDirection = 'column';\n        element.appendChild(scroller);\n        var pre = document.createElement(\"pre\");\n        pre.style.margin = '0px';\n        pre.textContent = JSON.stringify(annotatedResult.output, null, 4);\n        scroller.appendChild(pre); // Append inputs\n\n        var _iterator7 = _createForOfIteratorHelper(annotatedResult.inputs),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var input = _step7.value;\n\n            if (input.is_img) {\n              var img_tag = document.createElement('img');\n              img_tag.src = prependApiBaseIfNeeded(input.url);\n              img_tag.style.width = '100%';\n              img_tag.style.height = '79%';\n              img_tag.style.objectFit = 'contain';\n              scroller.appendChild(img_tag);\n            }\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n\n        return true; // We got JSON output for a multi image or text input ... don't bother showing the input right now\n      }\n    } else {\n      element.innerHTML = \"Model returned an unknown data type.\";\n      return false;\n    }\n  } else if (annotatedResult.output_url) {\n    // Image output.\n    console.log('got image output'); // Just show the image.\n\n    var img_tag = document.createElement('img');\n    img_tag.src = annotatedResult.output_url;\n    img_tag.style.position = 'relative';\n    img_tag.style.width = '100%';\n    img_tag.style.height = '100%';\n    img_tag.style.objectFit = 'contain';\n    element.appendChild(img_tag);\n    return true;\n  } else {\n    element.innerHTML = \"Model did not return an output or an error.\";\n    return false;\n  }\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nfunction process_annotations(input_struct, visualizer_data, scale_applied) {\n  input_struct = JSON.parse(JSON.stringify(input_struct)); // cheap deep clone\n\n  var detections = input_struct[visualizer_data.list_key];\n  detections.sort(function (a, b) {\n    return b.confidence - a.confidence;\n  });\n  var count = Math.min(15, detections.length);\n  var processed_annotations = [];\n\n  for (var i = 0; i < count; i++) {\n    var detection = detections[i];\n    var caption;\n\n    if (visualizer_data.label_key == 'demographic') {\n      if (detection[visualizer_data.label_key]) {\n        caption = detection[visualizer_data.label_key]; // backwards compatible demog format\n      } else {\n        //\"White Male, 30-40\"\n        caption = detection['cultural_appearance'] + ' ' + detection['gender'] + ', ' + detection['age_range'][0] + '-' + detection['age_range'][1];\n      }\n    } else if (visualizer_data.label_key == 'people') {\n      //produces \"Sad, White Male, 30-40, Ted Cruz\"\n      var parts = [];\n\n      if (detection['facial-expression-recognition'] && detection['facial-expression-recognition']['emotion'] != null) {\n        parts.push(capitalizeFirstLetter(detection['facial-expression-recognition']['emotion']));\n      }\n\n      if (detection['demographic-recognition'] && detection['demographic-recognition']['cultural_appearance'] != null) {\n        parts.push(detection['demographic-recognition']['cultural_appearance'] + ' ' + detection['demographic-recognition']['gender'] + ', ' + detection['demographic-recognition']['age_range'][0] + '-' + detection['demographic-recognition']['age_range'][1]);\n      }\n\n      if (detection['celebrity-recognition'] && detection['celebrity-recognition']['name'] != null && detection['celebrity-recognition']['name'] != 'unknown') {\n        parts.push(toTitleCase(detection['celebrity-recognition']['name']));\n      }\n\n      if (parts.length > 0) {\n        caption = parts.join(', ');\n      } else {\n        caption = \"Face\";\n      }\n    } else if (visualizer_data.label_key == 'pose') {\n      var named_segments = [[\"nose\", \"right_eye\"], [\"nose\", \"left_eye\"], [\"right_eye\", \"right_ear\"], [\"left_eye\", \"left_ear\"], [\"right_shoulder\", \"right_elbow\"], [\"left_shoulder\", \"left_elbow\"], [\"right_elbow\", \"right_hand\"], [\"left_elbow\", \"left_hand\"], [\"right_hip\", \"right_knee\"], [\"left_hip\", \"left_knee\"], [\"right_knee\", \"right_foot\"], [\"left_knee\", \"left_foot\"]];\n      caption = ''; // no caption for pose parts\n\n      var mask_vertices = [];\n\n      for (var _i = 0, _named_segments = named_segments; _i < _named_segments.length; _i++) {\n        var pair = _named_segments[_i];\n        var p1 = detection[visualizer_data.label_key][pair[0]];\n        var p2 = detection[visualizer_data.label_key][pair[1]];\n\n        if (p1 && p2) {\n          p1 = JSON.parse(JSON.stringify(p1)); // cheap deep clone\n\n          p2 = JSON.parse(JSON.stringify(p2)); // cheap deep clone\n          // Do not rescale here - let the mask rescale handle this\n          //                    p1[0] *= scale_applied;\n          //                    p1[1] *= scale_applied;\n          //                    p2[0] *= scale_applied;\n          //                    p2[1] *= scale_applied;\n\n          var polygon_part = [p1, p2];\n          mask_vertices.push(polygon_part);\n        }\n      }\n\n      detection.mask_vertices = mask_vertices;\n    } else {\n      caption = detection[visualizer_data.label_key]; // non demographic mode\n\n      if (caption && caption.constructor === String) {//It's a string\n      } else {\n        // some other type of object\n        var keys = Object.keys(caption);\n\n        if (keys.length == 1) {\n          caption = caption[keys[0]]; // get the only property\n        } else {\n          caption = JSON.stringify(caption);\n        }\n      }\n    }\n\n    if (detection.bounding_box) {\n      detection.bounding_box[0] *= scale_applied;\n      detection.bounding_box[1] *= scale_applied;\n      detection.bounding_box[2] *= scale_applied;\n      detection.bounding_box[3] *= scale_applied;\n    } // Note: this also handles pose results!\n\n\n    if (detection.mask_vertices) {\n      var _iterator8 = _createForOfIteratorHelper(detection.mask_vertices),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var part = _step8.value;\n\n          var _iterator9 = _createForOfIteratorHelper(part),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var point = _step9.value;\n              point[0] *= scale_applied;\n              point[1] *= scale_applied;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    processed_annotations.push({\n      bounding_box: detection.bounding_box,\n      mask_vertices: detection.mask_vertices,\n      caption: caption\n    });\n  }\n\n  return processed_annotations;\n}\n\nmodule.exports = {\n  renderResultIntoElement: renderResultIntoElement,\n  renderAnnotatedResultIntoElement: renderAnnotatedResultIntoElement\n};","map":{"version":3,"sources":["C:/Users/Derren/Desktop/CSC/material-kit-react-master/node_modules/deepai/lib/core/resultRendering.js"],"names":["apiBaseUrl","require","baseUrl","WAD_COLORS","isAbsolute","RegExp","isDataOrBlob","prependApiBaseIfNeeded","url","test","polygonToSvgPath","polygon","left","top","path_strings","part","length","push","first","point","isNaN","console","log","join","getAnnotatedResultFromResult","result","err","fetch","id","credentials","resultPageData","json","result_data","output","output_url","inputs","visualizer_data","scale_applied","renderResultIntoElement","element","annotatedResult","renderAnnotatedResultIntoElement","innerHTML","scroller","document","createElement","style","width","height","overflow","display","alignItems","flexDirection","appendChild","pre","textContent","whiteSpace","margin","input","is_img","img_tag","src","position","objectFit","resultscaler","onload","innerDoc","contentDocument","body","bbox_container","opacity","iframe_reflow","transform","bodyWidth","scrollWidth","bodyHeight","scrollHeight","imgWidth","offsetWidth","imgHeight","offsetHeight","containerWidth","containerHeight","wExcess","hExcess","wScale","hScale","minScale","Math","min","transformOrigin","setProperty","contentWindow","onresize","processed_annotations","process_annotations","i","annotation","bbox","color","mask_vertices","minx","miny","maxx","maxy","x","y","svg","createElementNS","path","setAttributeNS","fill","stroke","strokeWidth","border","bounding_box","Exception","bbox_label","caption","fontFamily","backgroundColor","fontSize","JSON","stringify","capitalizeFirstLetter","string","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","input_struct","parse","detections","list_key","sort","a","b","confidence","count","detection","label_key","parts","named_segments","pair","p1","p2","polygon_part","constructor","String","keys","Object","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst apiBaseUrl = require('./apiBaseUrl').baseUrl;\nvar WAD_COLORS = [\n    \"rgb(173, 35, 35)\", // Red\n    \"rgb(42, 75, 215)\", // Blue\n    \"rgb(87, 87, 87)\", // Dark Gray\n    \"rgb(29, 105, 20)\", // Green\n    \"rgb(129, 74, 25)\", // Brown\n    \"rgb(129, 38, 192)\", // Purple\n    \"rgb(160, 160, 160)\", // Lt Gray\n    \"rgb(129, 197, 122)\", // Lt green\n    \"rgb(157, 175, 255)\", // Lt blue\n    \"rgb(41, 208, 208)\", // Cyan\n    \"rgb(255, 146, 51)\", // Orange\n    \"rgb(199, 183, 0)\", // Yellow\n    \"rgb(233, 222, 187)\", // Tan\n    \"rgb(255, 205, 243)\", // Pink\n    // \"rgb(255, 255, 255)\", // White\n    //\"rgb(0, 0, 0)\",       // Black\n];\nvar isAbsolute = new RegExp('^([a-z]+://|//)', 'i');\nvar isDataOrBlob = new RegExp('^(data|blob):', 'i');\n\nfunction prependApiBaseIfNeeded(url) {\n    if(isAbsolute.test(url) || isDataOrBlob.test(url)) {\n        return url; // already absolute\n    } else {\n        return apiBaseUrl + url; // turn relative into absolute\n    }\n}\n\nfunction polygonToSvgPath(polygon, left, top) {\n    // M 10,10 L 100,10 100,100 z    M 30,20 L 70,20 70,60 z\n    var path_strings = [];\n    for (var part of polygon) {\n\n        if (part.length < 2) {\n            continue;\n        }\n\n        path_strings.push('M');\n        var first = true;\n        for (var point of part) {\n            path_strings.push((point[0]-left) + \",\" + (point[1]-top));\n            if (isNaN(point[0]) || isNaN(point[1])) {\n                console.log('not showing invalid polygon, found NaN');\n                return \"\";\n            }\n            if (first) {\n                path_strings.push('L');\n                first = false;\n            }\n        }\n        path_strings.push('z');\n    }\n    return path_strings.join(\" \");\n}\n\n/*\n\nData structures basic info...\n\nresult\n{\n    output_url:\n    output:\n    id:\n    err:\n}\n\n\nresultPageData\n{\n    result_data: {\n        inputs:[\n            {\n                is_img: true,\n                url: (relative or absolute)\n            }\n        ],\n        visualizer_data: {\n            list_key: 'Objects'\n            label_key: 'Object'\n        },\n        scale_applied: 1.333\n    }\n}\n\n\nannotatedResult - this is basically the merging of the 2 above\n{   err:\n    output_url:\n    output:\n    id:\n    inputs:[\n        {\n            is_img: true,\n            url: (relative or absolute)\n        }\n    ],\n    visualizer_data: {\n        list_key: 'Objects'\n        label_key: 'Object'\n    },\n    scale_applied: 1.333\n}\n\n\n*/\n// Take a result object from API call, and fetch additional data, and return the additional data merged in.\nasync function getAnnotatedResultFromResult(result) {\n    if(result.err) {\n        console.log('cannot get result page data for error result');\n        return result;\n    }\n    var resultPageData = await fetch(apiBaseUrl + '/get_standard_api_result_data/' + result.id, {\n        credentials: 'include'\n    });\n    resultPageData = await resultPageData.json();\n    var result_data = resultPageData.result_data;\n\n    // make merging of all the properties manually...\n    return {\n        err: result.err,\n        output: result.output,\n        output_url: result.output_url,\n        id: result.id,\n        inputs: result_data.inputs,\n        visualizer_data: result_data.visualizer_data,\n        scale_applied: result_data.scale_applied\n    };\n}\nasync function renderResultIntoElement(result, element) {\n    console.log('getting result page data');\n    var annotatedResult = await getAnnotatedResultFromResult(result);\n    console.log('got result page data');\n    return renderAnnotatedResultIntoElement(annotatedResult, element);\n}\n\nfunction renderAnnotatedResultIntoElement(annotatedResult, element) {\n    element.innerHTML = ''; // remove everything to start\n    if(annotatedResult.err) {\n        element.innerHTML = err;\n        return false;\n    }\n    if(annotatedResult.output) {\n        // JSON or text output.\n        console.log('got json or text output');\n        if(typeof annotatedResult.output === 'string') {\n            var scroller = document.createElement(\"div\");\n            scroller.style.width = '100%';\n            scroller.style.height = '100%';\n            scroller.style.overflow = 'auto';\n            scroller.style.display = 'flex';\n            scroller.style.alignItems = 'center';\n            scroller.style.flexDirection = 'column';\n            element.appendChild(scroller);\n            var pre = document.createElement(\"pre\");\n            pre.textContent = annotatedResult.output;\n            pre.style.whiteSpace = \"pre-wrap\";\n            pre.style.margin = '0px';\n            scroller.appendChild(pre);\n            // Append inputs\n            for(var input of annotatedResult.inputs) {\n                if(input.is_img) {\n                    var img_tag = document.createElement('img');\n                    img_tag.src = prependApiBaseIfNeeded(input.url);\n                    img_tag.style.position = 'relative';\n                    img_tag.style.width = '100%';\n                    img_tag.style.height = '100%%';\n                    img_tag.style.objectFit = 'contain';\n                    scroller.appendChild(img_tag);\n                }\n            }\n            return true;\n        } else if(typeof annotatedResult.output === 'object') {\n            // If we uploaded an image, then we may be able to render the image with boxes on top\n            if(annotatedResult.inputs.length == 1 &&\n                annotatedResult.inputs[0].is_img &&\n                annotatedResult.visualizer_data\n            ) {\n                // single image input and we know how to visualize it.\n                console.log('have visualizer for result JSON');\n                var resultscaler = document.createElement('iframe');\n                // Set up a handler for when the frame loads - we need to handle this event\n                resultscaler.onload = function() {\n                    // Firefox doesnt allow inner iframe manip until the iframe is loaded...\n                    var innerDoc = resultscaler.contentDocument.body;\n                    innerDoc.style.margin = '0px';\n                    innerDoc.style.overflow = 'hidden';\n\n/*\n\n                    var css = `\n                        boundingbox:hover{\n                            background-color: #00ff00\n                        }\n                    `;\n                    var style = document.createElement('style');\n\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = css;\n                    } else {\n                        style.appendChild(document.createTextNode(css));\n                    }\n\n                    resultscaler.contentDocument.head.appendChild(style);\n*/\n\n\n\n                    var bbox_container = document.createElement('boundingboxcontainer');\n                    bbox_container.style.position = 'relative'; // the absolute positions are relative to this element\n                    bbox_container.style.opacity = '0.001'; // the result are hidden until the iframe reflows - which is first when the img loads\n                    innerDoc.appendChild(bbox_container);\n                    var img_tag = document.createElement('img');\n                    img_tag.src = prependApiBaseIfNeeded(annotatedResult.inputs[0].url);\n                    img_tag.style.position = 'absolute';\n                    bbox_container.appendChild(img_tag);\n                    var iframe_reflow = function() {\n                        console.log('iframe resize');\n                        resultscaler.contentDocument.body.style.transform = null;\n                        var bodyWidth = resultscaler.contentDocument.body.scrollWidth;\n                        var bodyHeight = resultscaler.contentDocument.body.scrollHeight;\n                        var imgWidth = img_tag.offsetWidth;\n                        var imgHeight = img_tag.offsetHeight;\n                        var containerWidth = resultscaler.offsetWidth;\n                        var containerHeight = resultscaler.offsetHeight;\n                        var wExcess = 0;\n                        var hExcess = 0;\n                        if(imgWidth < bodyWidth && imgHeight < bodyHeight) {\n                            var wScale = containerWidth / imgWidth;\n                            var hScale = containerHeight / imgHeight;\n                            var minScale = Math.min(wScale, hScale);\n                            wExcess = containerWidth - imgWidth * minScale;\n                            hExcess = containerHeight - imgHeight * minScale;\n                        } else {\n                            var wScale = containerWidth / bodyWidth;\n                            var hScale = containerHeight / bodyHeight;\n                            var minScale = Math.min(wScale, hScale);\n                            wExcess = containerWidth - bodyWidth * minScale;\n                            hExcess = containerHeight - bodyHeight * minScale;\n                        }\n                        wExcess = wExcess / minScale;\n                        hExcess = hExcess / minScale;\n                        resultscaler.contentDocument.body.style.transformOrigin = 'top left';\n\n                        resultscaler.contentDocument.body.style.transform = 'scale(' + minScale + ')';\n                        bbox_container.style.setProperty('--scaleapplied', minScale);\n                        bbox_container.style.setProperty('--fontscale', (100 / minScale) + \"%\");\n\n                        bbox_container.style.left = (wExcess / 2) + \"px\";\n                        bbox_container.style.top = (hExcess / 2) + \"px\";\n                        bbox_container.style.opacity = '1';\n                    };\n                    resultscaler.contentWindow.onresize = iframe_reflow;\n                    img_tag.onload = iframe_reflow;\n                    var processed_annotations = process_annotations(annotatedResult.output, annotatedResult.visualizer_data, annotatedResult.scale_applied);\n                    console.log('processed annotations', processed_annotations);\n                    var i = 0;\n                    for(var annotation of processed_annotations) {\n                        var bbox = document.createElement('boundingbox');\n                        bbox.style.position = 'absolute';\n\n                        var left;\n                        var top;\n                        var width;\n                        var height;\n                        var color = WAD_COLORS[i++ % WAD_COLORS.length];\n\n                        if(annotation.mask_vertices){\n                            var minx = null;\n                            var miny = null;\n                            var maxx = null;\n                            var maxy = null;\n\n                            for(var part of annotation.mask_vertices){\n                                for(var point of part){\n                                    var x = point[0];\n                                    var y = point[1];\n\n                                    if(minx === null || x < minx){\n                                        minx = x;\n                                    }\n                                    if(miny === null || y < miny){\n                                        miny = y;\n                                    }\n                                    if(maxx === null || x > maxx){\n                                        maxx = x;\n                                    }\n                                    if(maxy === null || y > maxy){\n                                        maxy = y;\n                                    }\n                                }\n                            }\n\n                            width = maxx - minx;\n                            height = maxy - miny;\n\n                            left = minx;\n                            top = miny;\n\n                            var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n                            svg.style.position = 'absolute';\n                            svg.style.overflow = 'visible';\n                            svg.style.width = width + 'px';\n                            svg.style.height = height + 'px';\n\n                            var path = document.createElementNS('http://www.w3.org/2000/svg',\"path\");\n                            path.setAttributeNS(null, \"d\", polygonToSvgPath(annotation.mask_vertices, left, top));\n                            path.style.fill = 'none';\n                            path.style.stroke = color;\n                            path.style.strokeWidth = 'calc(2px / var(--scaleapplied))'; // 2px at all scale levels\n\n\n                            svg.appendChild(path);\n                            bbox.appendChild(svg);\n\n                            bbox.style.border = 'none';\n                        }else if(annotation.bounding_box){\n                            left = annotation.bounding_box[0];\n                            top = annotation.bounding_box[1];\n                            width = annotation.bounding_box[2];\n                            height = annotation.bounding_box[3];\n\n                            bbox.style.border = 'calc(2px / var(--scaleapplied)) solid ' + color;\n                        }else {\n                            throw new Exception('Neither mask_vertices or bounding_box is passed, unknown annotation format');\n                        }\n\n\n                        bbox.style.left = left + 'px';\n                        bbox.style.top = top + 'px';\n                        bbox.style.width = width + 'px';\n                        bbox.style.height = height + 'px';\n\n\n\n                        bbox_container.appendChild(bbox);\n                        var bbox_label = document.createElement('boundingboxlabel');\n                        bbox_label.textContent = annotation.caption;\n                        bbox_label.style.color = 'white';\n                        bbox_label.style.fontFamily = 'arial';\n                        bbox_label.style.backgroundColor = color;\n                        bbox_label.style.fontSize = 'var(--fontscale)';\n                        bbox_label.style.position = 'absolute';\n                        bbox.appendChild(bbox_label);\n                    }\n                }\n                // Set the src which will end up triggering the onload event in all browsers.\n                resultscaler.src = 'about:blank';\n                resultscaler.style.border = 'none';\n                resultscaler.style.width = '100%';\n                resultscaler.style.height = '100%';\n                element.appendChild(resultscaler);\n                return true;\n            } else {\n                // not single image - perhaps multi image or text input.\n                // or no visualizer\n                console.log('no visualizer for result JSON');\n                var scroller = document.createElement(\"div\");\n                scroller.style.width = '100%';\n                scroller.style.height = '100%';\n                scroller.style.overflow = 'auto';\n                scroller.style.display = 'flex';\n                scroller.style.alignItems = 'center';\n                scroller.style.flexDirection = 'column';\n                element.appendChild(scroller);\n                var pre = document.createElement(\"pre\");\n                pre.style.margin = '0px';\n                pre.textContent = JSON.stringify(annotatedResult.output, null, 4);\n                scroller.appendChild(pre);\n                // Append inputs\n                for(var input of annotatedResult.inputs) {\n                    if(input.is_img) {\n                        var img_tag = document.createElement('img');\n                        img_tag.src = prependApiBaseIfNeeded(input.url);\n                        img_tag.style.width = '100%';\n                        img_tag.style.height = '79%';\n                        img_tag.style.objectFit = 'contain';\n                        scroller.appendChild(img_tag);\n                    }\n                }\n                return true;\n                // We got JSON output for a multi image or text input ... don't bother showing the input right now\n            }\n        } else {\n            element.innerHTML = \"Model returned an unknown data type.\";\n            return false;\n        }\n    } else if(annotatedResult.output_url) {\n        // Image output.\n        console.log('got image output');\n        // Just show the image.\n        var img_tag = document.createElement('img');\n        img_tag.src = annotatedResult.output_url;\n        img_tag.style.position = 'relative';\n        img_tag.style.width = '100%';\n        img_tag.style.height = '100%';\n        img_tag.style.objectFit = 'contain';\n        element.appendChild(img_tag);\n        return true;\n    } else {\n        element.innerHTML = \"Model did not return an output or an error.\";\n        return false;\n    }\n}\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction toTitleCase(str) {\n    return str.replace(\n        /\\w\\S*/g,\n        function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }\n    );\n}\n\nfunction process_annotations(input_struct, visualizer_data, scale_applied) {\n    input_struct = JSON.parse(JSON.stringify(input_struct)); // cheap deep clone\n    var detections = input_struct[visualizer_data.list_key];\n    detections.sort(function(a, b) {\n        return b.confidence - a.confidence;\n    });\n    var count = Math.min(15, detections.length);\n    var processed_annotations = [];\n    for(var i = 0; i < count; i++) {\n        var detection = detections[i];\n        var caption;\n        if(visualizer_data.label_key == 'demographic') {\n            if(detection[visualizer_data.label_key]) {\n                caption = detection[visualizer_data.label_key]; // backwards compatible demog format\n            } else {\n                //\"White Male, 30-40\"\n                caption = detection['cultural_appearance'] + ' ' + detection['gender'] + ', ' + detection['age_range'][0] + '-' + detection['age_range'][1]\n            }\n        } else if(visualizer_data.label_key == 'people') {\n            //produces \"Sad, White Male, 30-40, Ted Cruz\"\n            var parts = [];\n            if(detection['facial-expression-recognition'] && detection['facial-expression-recognition']['emotion'] != null) {\n                parts.push(capitalizeFirstLetter(detection['facial-expression-recognition']['emotion']));\n            }\n            if(detection['demographic-recognition'] && detection['demographic-recognition']['cultural_appearance'] != null) {\n                parts.push(detection['demographic-recognition']['cultural_appearance'] + ' ' + detection['demographic-recognition']['gender'] + ', ' + detection['demographic-recognition']['age_range'][0] + '-' + detection['demographic-recognition']['age_range'][1]);\n            }\n            if(detection['celebrity-recognition'] && detection['celebrity-recognition']['name'] != null && detection['celebrity-recognition']['name'] != 'unknown') {\n                parts.push(toTitleCase(detection['celebrity-recognition']['name']));\n            }\n            if(parts.length > 0) {\n                caption = parts.join(', ');\n            } else {\n                caption = \"Face\";\n            }\n        } else if(visualizer_data.label_key == 'pose') {\n            const named_segments = [\n                [\n                    \"nose\",\n                    \"right_eye\"\n                ],\n                [\n                    \"nose\",\n                    \"left_eye\"\n                ],\n                [\n                    \"right_eye\",\n                    \"right_ear\"\n                ],\n                [\n                    \"left_eye\",\n                    \"left_ear\"\n                ],\n                [\n                    \"right_shoulder\",\n                    \"right_elbow\"\n                ],\n                [\n                    \"left_shoulder\",\n                    \"left_elbow\"\n                ],\n                [\n                    \"right_elbow\",\n                    \"right_hand\"\n                ],\n                [\n                    \"left_elbow\",\n                    \"left_hand\"\n                ],\n                [\n                    \"right_hip\",\n                    \"right_knee\"\n                ],\n                [\n                    \"left_hip\",\n                    \"left_knee\"\n                ],\n                [\n                    \"right_knee\",\n                    \"right_foot\"\n                ],\n                [\n                    \"left_knee\",\n                    \"left_foot\"\n                ]\n            ];\n            caption = ''; // no caption for pose parts\n\n            var mask_vertices = [];\n            for(var pair of named_segments){\n                var p1 = detection[visualizer_data.label_key][pair[0]];\n                var p2 = detection[visualizer_data.label_key][pair[1]];\n\n                if(p1 && p2){\n                    p1 = JSON.parse(JSON.stringify(p1)); // cheap deep clone\n                    p2 = JSON.parse(JSON.stringify(p2)); // cheap deep clone\n// Do not rescale here - let the mask rescale handle this\n//                    p1[0] *= scale_applied;\n//                    p1[1] *= scale_applied;\n//                    p2[0] *= scale_applied;\n//                    p2[1] *= scale_applied;\n                    var polygon_part = [p1, p2];\n                    mask_vertices.push(polygon_part);\n                }\n            }\n            detection.mask_vertices = mask_vertices;\n\n        } else {\n            caption = detection[visualizer_data.label_key]; // non demographic mode\n            if(caption && caption.constructor === String)\n            {\n                 //It's a string\n            }else{\n                // some other type of object\n                var keys = Object.keys(caption);\n                if(keys.length == 1){\n                    caption = caption[keys[0]]; // get the only property\n                }else{\n                    caption = JSON.stringify(caption);\n                }\n            }\n\n        }\n\n        if (detection.bounding_box){\n            detection.bounding_box[0] *= scale_applied;\n            detection.bounding_box[1] *= scale_applied;\n            detection.bounding_box[2] *= scale_applied;\n            detection.bounding_box[3] *= scale_applied;\n        }\n\n        // Note: this also handles pose results!\n        if (detection.mask_vertices){\n            for(var part of detection.mask_vertices){\n                for(var point of part){\n                    point[0] *= scale_applied;\n                    point[1] *= scale_applied;\n                }\n            }\n        }\n        processed_annotations.push({\n            bounding_box: detection.bounding_box,\n            mask_vertices: detection.mask_vertices,\n            caption: caption\n        });\n    }\n    return processed_annotations;\n}\n\nmodule.exports = {\n    renderResultIntoElement: renderResultIntoElement,\n    renderAnnotatedResultIntoElement: renderAnnotatedResultIntoElement\n};\n"]},"metadata":{},"sourceType":"script"}