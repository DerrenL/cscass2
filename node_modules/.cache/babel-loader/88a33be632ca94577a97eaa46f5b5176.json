{"ast":null,"code":"import _objectSpread from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\material-kit-react-master\\\\src\\\\views\\\\SubscribePage\\\\SubscribePage.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport SubscribeHeader from \"components/Header/SubscribeHeader.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/bg7.jpg\";\nimport { auth, db } from \"../../Firebase.js\";\nimport { useEffect, useReducer } from 'react';\nimport { loadStripe } from '@stripe/stripe-js'; // Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\n// recreating the `Stripe` object on every render.\n//const stripePromise = loadStripe('pk_test_51Gs8B2DuK8gXs6RwB36YDNuYAwoQmk1sLDaahcLQfPXvF1lZCnIYrzeJHktMKusQWSnFA2VjhI8VCn8ecndyXVVM00zZCToYeA');\n\nvar useStyles = makeStyles(styles);\nexport default function SubscribePage(props) {\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      passemail = _useState2[0],\n      setPassEmail = _useState2[1];\n\n  function test() {\n    auth.onAuthStateChanged(function (user) {\n      if (!user) {\n        window.location.href = \"/\";\n      } //console.log(user.email);\n\n\n      db.collection('users').doc(user.uid).get().then(function (doc) {\n        setPassEmail(user.email);\n      });\n    });\n    console.log(passemail);\n  }\n\n  test(); //create customer function\n\n  function createCustomer() {\n    console.log(\"ss\");\n    console.log(passemail);\n    var billingEmail = passemail;\n    return fetch('/create-customer', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: billingEmail\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      return result;\n    });\n  }\n\n  function createCustomerUsingEmail() {\n    var customer; //Create customer\n\n    createCustomer().then(function (result) {\n      customer = result.customer; //window.location.href = '/prices.html?customerId=' + customer.id;\n    });\n  } //new code\n\n\n  var fetchCheckoutSession = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var quantity;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              quantity = _ref.quantity;\n              return _context.abrupt(\"return\", fetch('/create-checkout-session', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  quantity: quantity\n                })\n              }).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCheckoutSession(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formatPrice = function formatPrice(_ref3) {\n    var amount = _ref3.amount,\n        currency = _ref3.currency,\n        quantity = _ref3.quantity;\n    var numberFormat = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n      currencyDisplay: 'symbol'\n    });\n    var parts = numberFormat.formatToParts(amount);\n    var zeroDecimalCurrency = true;\n\n    var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var part = _step.value;\n\n        if (part.type === 'decimal') {\n          zeroDecimalCurrency = false;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    amount = zeroDecimalCurrency ? amount : amount / 100;\n    var total = (quantity * amount).toFixed(2);\n    return numberFormat.format(total);\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'useEffectUpdate':\n        return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n          price: formatPrice({\n            amount: action.payload.unitAmount,\n            currency: action.payload.currency,\n            quantity: state.quantity\n          })\n        });\n\n      case 'increment':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          quantity: state.quantity + 1,\n          price: formatPrice({\n            amount: state.unitAmount,\n            currency: state.currency,\n            quantity: state.quantity + 1\n          })\n        });\n\n      case 'decrement':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          quantity: state.quantity - 1,\n          price: formatPrice({\n            amount: state.unitAmount,\n            currency: state.currency,\n            quantity: state.quantity - 1\n          })\n        });\n\n      case 'setLoading':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: action.payload.loading\n        });\n\n      case 'setError':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: action.payload.error\n        });\n\n      default:\n        throw new Error();\n    }\n  }\n\n  var Checkout = function Checkout() {\n    var _useReducer = useReducer(reducer, {\n      quantity: 1,\n      price: null,\n      loading: false,\n      error: null,\n      stripe: null\n    }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n    useEffect(function () {\n      function fetchConfig() {\n        return _fetchConfig.apply(this, arguments);\n      }\n\n      function _fetchConfig() {\n        _fetchConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var _yield$fetch$then, publicKey, unitAmount, currency;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch('/config').then(function (res) {\n                    return res.json();\n                  });\n\n                case 2:\n                  _yield$fetch$then = _context2.sent;\n                  publicKey = _yield$fetch$then.publicKey;\n                  unitAmount = _yield$fetch$then.unitAmount;\n                  currency = _yield$fetch$then.currency;\n                  _context2.t0 = dispatch;\n                  _context2.t1 = unitAmount;\n                  _context2.t2 = currency;\n                  _context2.next = 11;\n                  return loadStripe(publicKey);\n\n                case 11:\n                  _context2.t3 = _context2.sent;\n                  _context2.t4 = {\n                    unitAmount: _context2.t1,\n                    currency: _context2.t2,\n                    stripe: _context2.t3\n                  };\n                  _context2.t5 = {\n                    type: 'useEffectUpdate',\n                    payload: _context2.t4\n                  };\n                  (0, _context2.t0)(_context2.t5);\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        return _fetchConfig.apply(this, arguments);\n      }\n\n      fetchConfig();\n    }, []);\n\n    handleClick = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var _yield$fetchCheckoutS, sessionId, _yield$state$stripe$r, error;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // Call your backend to create the Checkout session.\n                dispatch({\n                  type: 'setLoading',\n                  payload: {\n                    loading: true\n                  }\n                });\n                _context3.next = 3;\n                return fetchCheckoutSession({\n                  quantity: state.quantity\n                });\n\n              case 3:\n                _yield$fetchCheckoutS = _context3.sent;\n                sessionId = _yield$fetchCheckoutS.sessionId;\n                _context3.next = 7;\n                return state.stripe.redirectToCheckout({\n                  sessionId: sessionId\n                });\n\n              case 7:\n                _yield$state$stripe$r = _context3.sent;\n                error = _yield$state$stripe$r.error;\n\n                // If `redirectToCheckout` fails due to a browser or network\n                // error, display the localized error message to your customer\n                // using `error.message`.\n                if (error) {\n                  dispatch({\n                    type: 'setError',\n                    payload: {\n                      error: error\n                    }\n                  });\n                  dispatch({\n                    type: 'setLoading',\n                    payload: {\n                      loading: false\n                    }\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function handleClick(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  };\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    absolute: true,\n    color: \"transparent\",\n    brand: \"TLTT\",\n    rightLinks: /*#__PURE__*/React.createElement(SubscribeHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    })\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes[cardAnimaton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"signup-form\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, \"Subscribe\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    value: passemail //onChange={e=>setRegisterName(e.target.value)}\n    //labelText=\"Name...\"\n    ,\n    id: \"name\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, \"Basic Plan\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"$1.00 per day billed daily\"))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    id: \"basic-plan-btn\",\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, \"Subscribe\")))))))));\n}","map":{"version":3,"sources":["D:/material-kit-react-master/src/views/SubscribePage/SubscribePage.js"],"names":["React","makeStyles","InputAdornment","Icon","Email","People","Header","SubscribeHeader","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","axios","useState","styles","image","auth","db","useEffect","useReducer","loadStripe","useStyles","SubscribePage","props","cardAnimaton","setCardAnimation","passemail","setPassEmail","test","onAuthStateChanged","user","window","location","href","collection","doc","uid","get","then","email","console","log","createCustomer","billingEmail","fetch","method","headers","body","JSON","stringify","response","json","result","createCustomerUsingEmail","customer","fetchCheckoutSession","quantity","res","formatPrice","amount","currency","numberFormat","Intl","NumberFormat","style","currencyDisplay","parts","formatToParts","zeroDecimalCurrency","part","type","total","toFixed","format","reducer","state","action","payload","price","unitAmount","loading","error","Error","Checkout","stripe","dispatch","fetchConfig","publicKey","handleClick","event","sessionId","redirectToCheckout","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","fullWidth","endAdornment","inputIconsColor","cardFooter"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport SubscribeHeader from \"components/Header/SubscribeHeader.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport axios from 'axios';\nimport { useState } from 'react';\n\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\n\nimport image from \"assets/img/bg7.jpg\";\nimport { auth, db } from \"../../Firebase.js\";\nimport { useEffect, useReducer } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\n// Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\n// recreating the `Stripe` object on every render.\n//const stripePromise = loadStripe('pk_test_51Gs8B2DuK8gXs6RwB36YDNuYAwoQmk1sLDaahcLQfPXvF1lZCnIYrzeJHktMKusQWSnFA2VjhI8VCn8ecndyXVVM00zZCToYeA');\n\n\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function SubscribePage(props) {\n\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  const [passemail, setPassEmail] = useState(\"\");\n  function test() {\n    auth.onAuthStateChanged(function (user) {\n      if (!user) {\n        window.location.href = \"/\";\n      }\n      //console.log(user.email);\n      db.collection('users').doc(user.uid).get().then(doc => {\n        setPassEmail(user.email);\n      })\n\n    })\n    console.log(passemail);\n  }\n  test();\n\n\n  //create customer function\n  function createCustomer() {\n    console.log(\"ss\");\n    console.log(passemail);\n    let billingEmail = passemail;\n\n    return fetch('/create-customer', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: billingEmail,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        return result;\n      });\n  }\n  function createCustomerUsingEmail() {\n    let customer;\n    //Create customer\n    createCustomer().then((result) => {\n      customer = result.customer;\n      //window.location.href = '/prices.html?customerId=' + customer.id;\n    });\n  }\n\n  //new code\n  const fetchCheckoutSession = async ({ quantity }) => {\n    return fetch('/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        quantity,\n      }),\n    }).then((res) => res.json());\n  };\n  \n  const formatPrice = ({ amount, currency, quantity }) => {\n    const numberFormat = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n      currencyDisplay: 'symbol',\n    });\n    const parts = numberFormat.formatToParts(amount);\n    let zeroDecimalCurrency = true;\n    for (let part of parts) {\n      if (part.type === 'decimal') {\n        zeroDecimalCurrency = false;\n      }\n    }\n    amount = zeroDecimalCurrency ? amount : amount / 100;\n    const total = (quantity * amount).toFixed(2);\n    return numberFormat.format(total);\n  };\n  \n  function reducer(state, action) {\n    switch (action.type) {\n      case 'useEffectUpdate':\n        return {\n          ...state,\n          ...action.payload,\n          price: formatPrice({\n            amount: action.payload.unitAmount,\n            currency: action.payload.currency,\n            quantity: state.quantity,\n          }),\n        };\n      case 'increment':\n        return {\n          ...state,\n          quantity: state.quantity + 1,\n          price: formatPrice({\n            amount: state.unitAmount,\n            currency: state.currency,\n            quantity: state.quantity + 1,\n          }),\n        };\n      case 'decrement':\n        return {\n          ...state,\n          quantity: state.quantity - 1,\n          price: formatPrice({\n            amount: state.unitAmount,\n            currency: state.currency,\n            quantity: state.quantity - 1,\n          }),\n        };\n      case 'setLoading':\n        return { ...state, loading: action.payload.loading };\n      case 'setError':\n        return { ...state, error: action.payload.error };\n      default:\n        throw new Error();\n    }\n  }\n  \n  const Checkout = () => {\n    const [state, dispatch] = useReducer(reducer, {\n      quantity: 1,\n      price: null,\n      loading: false,\n      error: null,\n      stripe: null,\n    });\n  \n    useEffect(() => {\n      async function fetchConfig() {\n        // Fetch config from our backend.\n        const { publicKey, unitAmount, currency } = await fetch(\n          '/config'\n        ).then((res) => res.json());\n        // Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\n        // recreating the `Stripe` object on every render.\n        dispatch({\n          type: 'useEffectUpdate',\n          payload: { unitAmount, currency, stripe: await loadStripe(publicKey) },\n        });\n      }\n      fetchConfig();\n    }, []);\n  \n    handleClick = async (event) => {\n      // Call your backend to create the Checkout session.\n      dispatch({ type: 'setLoading', payload: { loading: true } });\n      const { sessionId } = await fetchCheckoutSession({\n        quantity: state.quantity,\n      });\n      // When the customer clicks on the button, redirect them to Checkout.\n      const { error } = await state.stripe.redirectToCheckout({\n        sessionId,\n      });\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `error.message`.\n      if (error) {\n        dispatch({ type: 'setError', payload: { error } });\n        dispatch({ type: 'setLoading', payload: { loading: false } });\n      }\n    };\n  }\n\n\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        absolute\n        color=\"transparent\"\n        brand=\"TLTT\"\n        rightLinks={<SubscribeHeader />}\n        {...rest}\n      />\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n                <form id=\"signup-form\" className={classes.form}>\n                  <CardHeader color=\"primary\" className={classes.cardHeader}>\n                    <h4>Subscribe</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <CustomInput\n                      value={passemail}\n                      //onChange={e=>setRegisterName(e.target.value)}\n                      //labelText=\"Name...\"\n                      id=\"name\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <br></br>\n                      <Card>\n                        <CardHeader color=\"info\">Basic Plan</CardHeader>\n                        <CardBody>$1.00 per day billed daily</CardBody>\n                      </Card>\n                  </CardBody>\n                  <CardFooter className={classes.cardFooter}>\n                    {/* <Button onClick={createCustomerUsingEmail} simple color=\"primary\" size=\"lg\">\n                      Confirm\n                        </Button> */}\n                    <Button onClick={handleClick} id=\"basic-plan-btn\" simple color=\"primary\" size=\"lg\">\n                      Subscribe\n                    </Button>\n                    {/* <button id=\"checkout-button\" data-secret=\"{{ session_id }}\">\n                      Checkout\n                    </button> */}\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}