{"ast":null,"code":"import _defineProperty from \"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\material-kit-react-master\\\\src\\\\components\\\\CustomInput\\\\CustomInput.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2, _classNames4;\n\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      onChange = props.onChange,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id,\n    onChange: onChange\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })));\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  onChange: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};","map":{"version":3,"sources":["D:/material-kit-react-master/src/components/CustomInput/CustomInput.js"],"names":["React","PropTypes","classNames","makeStyles","FormControl","InputLabel","Input","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","onChange","labelProps","inputProps","error","white","inputRootCustomClasses","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    onChange,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        onChange={onChange}\n        {...inputProps}\n      />\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  onChange: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}