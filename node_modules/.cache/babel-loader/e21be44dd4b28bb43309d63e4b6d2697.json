{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar utils = require('./../utils');\n\nvar axios = require('axios');\n\nvar formData = require('form-data'); // const Buffer = require('buffer/').Buffer; // note: the trailing slash is important!\n\n\nvar apiBaseUrl = require('./apiBaseUrl').baseUrl;\n\nvar resultRendering = require('./resultRendering');\n\nvar globalObject = Function('return this')();\n/**\n * Create a new instance of DeepAI\n *\n * @param {Object} instanceConfig The default config for the instance\n */\n\nfunction DeepAI(instanceConfig) {\n  this.defaults = instanceConfig;\n  axios.defaults.headers.common['client-library'] = 'deepai-js-client';\n}\n\nDeepAI.prototype.setApiKey = function (apiKey) {\n  this.apiKey = apiKey;\n  axios.defaults.headers.common['api-key'] = apiKey;\n};\n\nfunction urlForModel(model_name) {\n  return apiBaseUrl + \"/api/\" + model_name;\n}\n\nDeepAI.prototype.callStandardApi = /*#__PURE__*/function () {\n  var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(model_name, inputs_object) {\n    var form, _i, _Object$keys, key, element, req_options, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = new formData();\n            _i = 0, _Object$keys = Object.keys(inputs_object);\n\n          case 2:\n            if (!(_i < _Object$keys.length)) {\n              _context.next = 43;\n              break;\n            }\n\n            key = _Object$keys[_i];\n\n            if (!(inputs_object[key] === null || inputs_object[key] === undefined)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 40);\n\n          case 6:\n            if (!(typeof inputs_object[key] === 'string')) {\n              _context.next = 10;\n              break;\n            }\n\n            form.append(key, inputs_object[key]); // a string could be a URL or just some text data. both are OK\n\n            _context.next = 40;\n            break;\n\n          case 10:\n            if (!(globalObject.Element && inputs_object[key] instanceof globalObject.Element)) {\n              _context.next = 31;\n              break;\n            }\n\n            element = inputs_object[key];\n\n            if (!(element.tagName === 'IMG')) {\n              _context.next = 20;\n              break;\n            }\n\n            if (!element.src) {\n              _context.next = 17;\n              break;\n            }\n\n            // pass the src url\n            form.append(key, element.src); // TODO do something about data URLs\n            // TODO do something about blob URLs\n\n            _context.next = 18;\n            break;\n\n          case 17:\n            throw new Error(\"DeepAI error: Image element has no SRC: \" + key);\n\n          case 18:\n            _context.next = 29;\n            break;\n\n          case 20:\n            if (!(element.tagName === 'INPUT' && element.files !== undefined)) {\n              _context.next = 28;\n              break;\n            }\n\n            if (!(element.files.length > 0)) {\n              _context.next = 25;\n              break;\n            }\n\n            form.append(key, element.files[0], 'file.jpeg');\n            _context.next = 26;\n            break;\n\n          case 25:\n            throw new Error(\"DeepAI error: File picker has no file picked: \" + key);\n\n          case 26:\n            _context.next = 29;\n            break;\n\n          case 28:\n            throw new Error(\"DeepAI error: DOM Element type for key: \" + key);\n\n          case 29:\n            _context.next = 40;\n            break;\n\n          case 31:\n            if (!inputs_object[key].hasOwnProperty('fd')) {\n              _context.next = 35;\n              break;\n            }\n\n            // Seems to be a nodejs stream.\n            form.append(key, inputs_object[key]); // form-data in nodejs can handle this\n\n            _context.next = 40;\n            break;\n\n          case 35:\n            if (!(globalObject.Buffer && Buffer.isBuffer(inputs_object[key]))) {\n              _context.next = 39;\n              break;\n            }\n\n            form.append(key, inputs_object[key], 'file.jpeg'); // form-data in nodejs can handle this\n\n            _context.next = 40;\n            break;\n\n          case 39:\n            throw new Error(\"DeepAI error: unknown input type for key: \" + key);\n\n          case 40:\n            _i++;\n            _context.next = 2;\n            break;\n\n          case 43:\n            req_options = {\n              withCredentials: true\n            };\n\n            if (form.getHeaders !== undefined) {\n              // formData is the nodejs based subsitute, only needed for node.js\n              req_options.headers = form.getHeaders();\n            }\n\n            _context.next = 47;\n            return axios.post(urlForModel(model_name), form, req_options);\n\n          case 47:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 49:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function request(_x, _x2) {\n    return _request.apply(this, arguments);\n  }\n\n  return request;\n}();\n\nDeepAI.prototype.renderResultIntoElement = resultRendering.renderResultIntoElement;\nDeepAI.prototype.renderAnnotatedResultIntoElement = resultRendering.renderAnnotatedResultIntoElement;\nmodule.exports = DeepAI;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/deepai/lib/core/DeepAI.js"],"names":["utils","require","axios","formData","apiBaseUrl","baseUrl","resultRendering","globalObject","Function","DeepAI","instanceConfig","defaults","headers","common","prototype","setApiKey","apiKey","urlForModel","model_name","callStandardApi","inputs_object","form","Object","keys","key","undefined","append","Element","element","tagName","src","Error","files","length","hasOwnProperty","Buffer","isBuffer","req_options","withCredentials","getHeaders","post","response","data","request","renderResultIntoElement","renderAnnotatedResultIntoElement","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nconst axios = require('axios');\nconst formData = require('form-data');\n// const Buffer = require('buffer/').Buffer; // note: the trailing slash is important!\n\nconst apiBaseUrl = require('./apiBaseUrl').baseUrl;\nconst resultRendering = require('./resultRendering');\n\nconst globalObject = Function('return this')();\n\n/**\n * Create a new instance of DeepAI\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction DeepAI(instanceConfig) {\n    this.defaults = instanceConfig;\n    axios.defaults.headers.common['client-library'] = 'deepai-js-client';\n}\n\nDeepAI.prototype.setApiKey = function (apiKey) {\n    this.apiKey = apiKey;\n    axios.defaults.headers.common['api-key'] = apiKey;\n};\n\nfunction urlForModel(model_name) {\n    return apiBaseUrl+\"/api/\" + model_name;\n}\n\n\nDeepAI.prototype.callStandardApi = async function request(model_name, inputs_object) {\n\n    const form = new formData();\n    for (var key of Object.keys(inputs_object)) {\n        // Second argument  can take Buffer or Stream (lazily read during the request) too.\n        // Third argument is filename if you want to simulate a file upload. Otherwise omit.\n        if (inputs_object[key] === null || inputs_object[key] === undefined) {\n            continue; // Input is blank, that is allowed sometimes.\n        }\n\n        if (typeof inputs_object[key] === 'string') {\n            form.append(key, inputs_object[key]); // a string could be a URL or just some text data. both are OK\n        } else if (globalObject.Element && inputs_object[key] instanceof globalObject.Element) {\n            var element = inputs_object[key];\n            if (element.tagName === 'IMG') {\n                // got an IMG dom node element\n\n                if (element.src) {\n                    // pass the src url\n                    form.append(key, element.src);\n\n                    // TODO do something about data URLs\n                    // TODO do something about blob URLs\n\n                } else {\n                    throw new Error(\"DeepAI error: Image element has no SRC: \" + key);\n                }\n            } else if (element.tagName === 'INPUT' && element.files !== undefined) {\n                // got a file picker\n                if (element.files.length > 0) {\n                    form.append(key, element.files[0], 'file.jpeg');\n                } else {\n                    throw new Error(\"DeepAI error: File picker has no file picked: \" + key);\n                }\n            } else {\n                throw new Error(\"DeepAI error: DOM Element type for key: \" + key);\n            }\n        } else if (inputs_object[key].hasOwnProperty('fd')) {\n            // Seems to be a nodejs stream.\n            form.append(key, inputs_object[key]); // form-data in nodejs can handle this\n        } else if (globalObject.Buffer && Buffer.isBuffer(inputs_object[key])) {\n            form.append(key, inputs_object[key], 'file.jpeg'); // form-data in nodejs can handle this\n        } else {\n            throw new Error(\"DeepAI error: unknown input type for key: \" + key);\n        }\n        // TODO do filenames need to be unique?\n\n    }\n\n    var req_options = {\n        withCredentials: true\n    };\n    if (form.getHeaders !== undefined) {\n        // formData is the nodejs based subsitute, only needed for node.js\n        req_options.headers = form.getHeaders();\n    }\n    const response = await axios.post(urlForModel(model_name), form, req_options);\n    return response.data;\n\n};\n\nDeepAI.prototype.renderResultIntoElement = resultRendering.renderResultIntoElement;\nDeepAI.prototype.renderAnnotatedResultIntoElement = resultRendering.renderAnnotatedResultIntoElement;\n\nmodule.exports = DeepAI;\n"]},"metadata":{},"sourceType":"script"}