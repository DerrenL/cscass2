{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar svr = require(\"./set-values\");\n/**\n * Set/update (some) property values of a given user. The properties (columns) must be previously created by [Add user property](https://docs.recombee.com/api.html#add-user-property).\n */\n\n\nvar SetUserValues = /*#__PURE__*/function (_svr$SetValues) {\n  _inherits(SetUserValues, _svr$SetValues);\n\n  var _super = _createSuper(SetUserValues);\n\n  /**\n   * Construct the request\n   * @param {string} userId - ID of the user which will be modified.\n   * @param {Object} values - The values for the individual properties.\n   *   {\n   *     country: 'US',\n   *     sex: 'F'\n   *   }\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the user should be created  if not present in the database.\n   */\n  function SetUserValues(userId, values, optional) {\n    _classCallCheck(this, SetUserValues);\n\n    return _super.call(this, \"/users/\".concat(userId), values, optional);\n  }\n\n  return SetUserValues;\n}(svr.SetValues);\n\nexports.SetUserValues = SetUserValues;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/requests/set-user-values.js"],"names":["svr","require","SetUserValues","userId","values","optional","SetValues","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;AAEA;;;;;IAGMC,a;;;;;AAEJ;;;;;;;;;;;;;;AAcA,yBAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AAAA;;AAAA,8CACpBF,MADoB,GACVC,MADU,EACFC,QADE;AAErC;;;EAlByBL,GAAG,CAACM,S;;AAqBhCC,OAAO,CAACL,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\nconst svr = require(\"./set-values\");\n\n/**\n * Set/update (some) property values of a given user. The properties (columns) must be previously created by [Add user property](https://docs.recombee.com/api.html#add-user-property).\n */\nclass SetUserValues extends svr.SetValues {\n\n  /**\n   * Construct the request\n   * @param {string} userId - ID of the user which will be modified.\n   * @param {Object} values - The values for the individual properties.\n   *   {\n   *     country: 'US',\n   *     sex: 'F'\n   *   }\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the user should be created  if not present in the database.\n   */\n  constructor(userId, values, optional) {\n    super(`/users/${userId}`, values, optional);\n  }\n}\n\nexports.SetUserValues = SetUserValues\n"]},"metadata":{},"sourceType":"script"}