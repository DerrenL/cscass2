{"ast":null,"code":"/*\n This file is auto-generated, do not edit\n*/\n'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar rqs = require(\"./request\");\n/**\n * Deletes an existing view portion specified by (`userId`, `itemId`, `sessionId`) from the database.\n */\n\n\nvar DeleteViewPortion = /*#__PURE__*/function (_rqs$Request) {\n  _inherits(DeleteViewPortion, _rqs$Request);\n\n  var _super = _createSuper(DeleteViewPortion);\n\n  /**\n   * Construct the request\n   * @param {string} userId - ID of the user who rated the item.\n   * @param {string} itemId - ID of the item which was rated.\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *sessionId*\n   *         - Type: string\n   *         - Description: Identifier of a session.\n   */\n  function DeleteViewPortion(userId, itemId, optional) {\n    var _this;\n\n    _classCallCheck(this, DeleteViewPortion);\n\n    _this = _super.call(this, 'DELETE', '/viewportions/', 1000, false);\n    _this.userId = userId;\n    _this.itemId = itemId;\n    optional = optional || {};\n    _this.sessionId = optional.sessionId;\n    return _this;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  _createClass(DeleteViewPortion, [{\n    key: \"bodyParameters\",\n    value: function bodyParameters() {\n      var params = {};\n      return params;\n    }\n    /**\n     * Get query parameters\n     * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n     */\n\n  }, {\n    key: \"queryParameters\",\n    value: function queryParameters() {\n      var params = {};\n      params.userId = this.userId;\n      params.itemId = this.itemId;\n      if (this.sessionId !== undefined) params.sessionId = this.sessionId;\n      return params;\n    }\n  }]);\n\n  return DeleteViewPortion;\n}(rqs.Request);\n\nexports.DeleteViewPortion = DeleteViewPortion;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/requests/delete-view-portion.js"],"names":["rqs","require","DeleteViewPortion","userId","itemId","optional","sessionId","params","undefined","Request","exports"],"mappings":"AAAA;;;AAIA;;;;;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;IAGMC,iB;;;;;AAEJ;;;;;;;;;;AAUA,6BAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AAAA;;AAAA;;AACpC,8BAAM,QAAN,EAAgB,gBAAhB,EAAkC,IAAlC,EAAwC,KAAxC;AACA,UAAKF,MAAL,GAAcA,MAAd;AACA,UAAKC,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,UAAKC,SAAL,GAAiBD,QAAQ,CAACC,SAA1B;AALoC;AAMrC;AAED;;;;;;;;qCAIiB;AACf,UAAIC,MAAM,GAAG,EAAb;AAEA,aAAOA,MAAP;AACD;AAED;;;;;;;sCAIkB;AAChB,UAAIA,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACJ,MAAP,GAAgB,KAAKA,MAArB;AACAI,MAAAA,MAAM,CAACH,MAAP,GAAgB,KAAKA,MAArB;AACA,UAAI,KAAKE,SAAL,KAAmBE,SAAvB,EACED,MAAM,CAACD,SAAP,GAAmB,KAAKA,SAAxB;AACF,aAAOC,MAAP;AACD;;;;EAzC6BP,GAAG,CAACS,O;;AA4CpCC,OAAO,CAACR,iBAAR,GAA4BA,iBAA5B","sourcesContent":["/*\n This file is auto-generated, do not edit\n*/\n\n'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Deletes an existing view portion specified by (`userId`, `itemId`, `sessionId`) from the database.\n */\nclass DeleteViewPortion extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {string} userId - ID of the user who rated the item.\n   * @param {string} itemId - ID of the item which was rated.\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *sessionId*\n   *         - Type: string\n   *         - Description: Identifier of a session.\n   */\n  constructor(userId, itemId, optional) {\n    super('DELETE', '/viewportions/', 1000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.sessionId = optional.sessionId;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let params = {};\n\n    return params;\n  }\n\n  /**\n   * Get query parameters\n   * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n   */\n  queryParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n    if (this.sessionId !== undefined)\n      params.sessionId = this.sessionId;\n    return params;\n  }\n}\n\nexports.DeleteViewPortion = DeleteViewPortion\n"]},"metadata":{},"sourceType":"script"}