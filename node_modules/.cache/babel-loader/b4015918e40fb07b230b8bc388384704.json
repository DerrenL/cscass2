{"ast":null,"code":"/*\n This file is auto-generated, do not edit\n*/\n'use strict';\n\nvar _classCallCheck = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar rqs = require(\"./request\");\n/**\n * Removes an existing group item from the group.\n */\n\n\nvar RemoveFromGroup = /*#__PURE__*/function (_rqs$Request) {\n  _inherits(RemoveFromGroup, _rqs$Request);\n\n  var _super = _createSuper(RemoveFromGroup);\n\n  /**\n   * Construct the request\n   * @param {string} groupId - ID of the group from which a group item is to be removed.\n   * @param {string} itemType - Type of the item to be removed.\n   * @param {string} itemId - ID of the item iff `itemType` is `item`. ID of the group iff `itemType` is `group`.\n   */\n  function RemoveFromGroup(groupId, itemType, itemId) {\n    var _this;\n\n    _classCallCheck(this, RemoveFromGroup);\n\n    _this = _super.call(this, 'DELETE', \"/groups/\".concat(groupId, \"/items/\"), 1000, false);\n    _this.groupId = groupId;\n    _this.itemType = itemType;\n    _this.itemId = itemId;\n    return _this;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  _createClass(RemoveFromGroup, [{\n    key: \"bodyParameters\",\n    value: function bodyParameters() {\n      var params = {};\n      return params;\n    }\n    /**\n     * Get query parameters\n     * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n     */\n\n  }, {\n    key: \"queryParameters\",\n    value: function queryParameters() {\n      var params = {};\n      params.itemType = this.itemType;\n      params.itemId = this.itemId;\n      return params;\n    }\n  }]);\n\n  return RemoveFromGroup;\n}(rqs.Request);\n\nexports.RemoveFromGroup = RemoveFromGroup;","map":{"version":3,"sources":["D:/material-kit-react-master/node_modules/recombee-api-client/lib/requests/remove-from-group.js"],"names":["rqs","require","RemoveFromGroup","groupId","itemType","itemId","params","Request","exports"],"mappings":"AAAA;;;AAIA;;;;;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;IAGMC,e;;;;;AAEJ;;;;;;AAMA,2BAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuC;AAAA;;AAAA;;AACrC,8BAAM,QAAN,oBAA2BF,OAA3B,cAA6C,IAA7C,EAAmD,KAAnD;AACA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKC,MAAL,GAAcA,MAAd;AAJqC;AAKtC;AAED;;;;;;;;qCAIiB;AACf,UAAIC,MAAM,GAAG,EAAb;AAEA,aAAOA,MAAP;AACD;AAED;;;;;;;sCAIkB;AAChB,UAAIA,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACF,QAAP,GAAkB,KAAKA,QAAvB;AACAE,MAAAA,MAAM,CAACD,MAAP,GAAgB,KAAKA,MAArB;AACA,aAAOC,MAAP;AACD;;;;EAlC2BN,GAAG,CAACO,O;;AAqClCC,OAAO,CAACN,eAAR,GAA0BA,eAA1B","sourcesContent":["/*\n This file is auto-generated, do not edit\n*/\n\n'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Removes an existing group item from the group.\n */\nclass RemoveFromGroup extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {string} groupId - ID of the group from which a group item is to be removed.\n   * @param {string} itemType - Type of the item to be removed.\n   * @param {string} itemId - ID of the item iff `itemType` is `item`. ID of the group iff `itemType` is `group`.\n   */\n  constructor(groupId, itemType, itemId) {\n    super('DELETE', `/groups/${groupId}/items/`, 1000, false);\n    this.groupId = groupId;\n    this.itemType = itemType;\n    this.itemId = itemId;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let params = {};\n\n    return params;\n  }\n\n  /**\n   * Get query parameters\n   * @return {Object} The values of query parameters (name of parameter: value of the parameter)\n   */\n  queryParameters() {\n    let params = {};\n    params.itemType = this.itemType;\n    params.itemId = this.itemId;\n    return params;\n  }\n}\n\nexports.RemoveFromGroup = RemoveFromGroup\n"]},"metadata":{},"sourceType":"script"}