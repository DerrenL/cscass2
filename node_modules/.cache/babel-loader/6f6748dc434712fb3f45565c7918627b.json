{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Derren\\\\Desktop\\\\CSC\\\\material-kit-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Derren\\\\Desktop\\\\CSC\\\\material-kit-react-master\\\\src\\\\components\\\\CustomInput\\\\CustomInput.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2, _classNames4;\n\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      value = props.value,\n      onChange = props.onChange,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id,\n    onChange: onChange,\n    value: value\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })));\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  onChange: PropTypes.string,\n  value: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Derren/Desktop/CSC/material-kit-react-master/src/components/CustomInput/CustomInput.js"],"names":["React","PropTypes","classNames","makeStyles","FormControl","InputLabel","Input","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","value","onChange","labelProps","inputProps","error","white","inputRootCustomClasses","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    value,\r\n    onChange,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    white,\r\n    inputRootCustomClasses,\r\n    success\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true,\r\n    [classes.whiteUnderline]: white\r\n  });\r\n  const marginTop = classNames({\r\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\r\n  });\r\n  const inputClasses = classNames({\r\n    [classes.input]: true,\r\n    [classes.whiteInput]: white\r\n  });\r\n  var formControlClasses;\r\n  if (formControlProps !== undefined) {\r\n    formControlClasses = classNames(\r\n      formControlProps.className,\r\n      classes.formControl\r\n    );\r\n  } else {\r\n    formControlClasses = classes.formControl;\r\n  }\r\n  return (\r\n    <FormControl {...formControlProps} className={formControlClasses}>\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + \" \" + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          input: inputClasses,\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses\r\n        }}\r\n        id={id}\r\n        onChange={onChange}\r\n        value={value}\r\n        {...inputProps}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  onChange: PropTypes.string,\r\n  value: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  inputRootCustomClasses: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  white: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}